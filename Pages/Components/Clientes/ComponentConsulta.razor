@page "/Clientes/Consulta/{idCliente:int}"
@inject HttpClient http
@using Factura.Models
@inject NavigationManager navigationManager
@using System.Text.Json
@using System.Text.Json.Serialization;


<h3>@clientes?.nombreCompleto</h3>

<table class="table">
    <thead>
        <tr>
            <th>Contador</th>
            <th>Direccion</th>
            <th>Tipo Cliente</th>
            <th>Saldo</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in sumaDatos)
       {
           
       
            <tr>
                
                <td>
                   @clientes?.numeroContador
                </td>
                <td>
                    @clientes?.direccion
                </td>
                <td>
                    @tipoClientes?.descripcionTipo
                </td>
                <td>
                    @item.cantidad
                </td>
                <td>
                    <a class="btn btn-success" @onclick="@EnviarCorreo">Enviar Correo</a>
                </td>
           

            



        </tr>
        }
        
    </tbody>
</table>

@*<form>
    <div class="form-group row">
        <label for="staticEmail" class="col-sm-2 col-form-label">Direccion</label>
        <div class="col-sm-10">
            <input type="text" @bind-value="clientes.direccion" readonly class="form-control-plaintext" >
        </div>
    </div>
    <div class="form-group row">
        <label for="staticEmail" class="col-sm-2 col-form-label">Telefono</label>
        <div class="col-sm-10">
            <input type="text" @bind-value="clientes.telefono" readonly class="form-control-plaintext">
        </div>
    </div>
    <div class="form-group row">
        <label for="staticEmail" class="col-sm-2 col-form-label">Numero de Contador</label>
        <div class="col-sm-10">
            <input type="text" @bind-value="clientes.numeroContador" readonly class="form-control-plaintext">
        </div>
    </div>
    <button type="submit" class="btn btn-primary">Sign in</button>
</form>*@

    
    


@code {
    [Parameter] public int IdCliente { get; set; }
    private Clientes? clientes;
    public List<SumaDatos>? sumaDatos { get; set; }
    private TipoClientes? tipoClientes;




    protected async override Task OnInitializedAsync()
    {
        sumaDatos = await http.GetFromJsonAsync<List<SumaDatos>>($"api/Historials/{IdCliente}");
        var response = await http.GetAsync($"api/Clientes/{IdCliente}");
        var response2 = await http.GetAsync($"api/TipoClientes/{IdCliente}");



        if (response.IsSuccessStatusCode)
        {

            clientes = JsonSerializer.Deserialize<Clientes>(await response.Content.ReadAsStringAsync(),
            new JsonSerializerOptions() { PropertyNameCaseInsensitive = true });

            tipoClientes = JsonSerializer.Deserialize<TipoClientes>(await response2.Content.ReadAsStringAsync(),
            new JsonSerializerOptions() { PropertyNameCaseInsensitive = true });

        }




    }

    public async Task EnviarCorreo()
    {
        var resp = await http.PostAsJsonAsync($"api/Correo/Enviar/{clientes?.correo}",clientes?.correo);

        if (resp.IsSuccessStatusCode)
        {
            navigationManager.NavigateTo("Clientes");
            
        }

        else{
            
            Console.WriteLine(await resp.Content.ReadAsStringAsync());
        }
    }
}
